<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://schema.cloudfoundry.org/spring
        http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-lazy-init="true">

	<description>Spring Configuration</description>

	<context:annotation-config />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
		
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Jpa Entity Manager -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="defaultPU" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="persistenceXmlLocation" value="classpath*:META-INF/jpa_persistence.xml" />
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect"
				class="com.financial.tools.recorderserver.util.HibernateUtils">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>

	<bean id="groupStore"
		class="com.financial.tools.recorderserver.store.impl.GroupStoreJpaImpl" />
		
	<bean id="userStore"
		class="com.financial.tools.recorderserver.store.impl.UserStoreJpaImpl" />
		
	<bean id="financialRecordStore"
		class="com.financial.tools.recorderserver.store.impl.FinancialRecordStoreJpaImpl" />
		
	<bean id="financialManager"
		class="com.financial.tools.recorderserver.business.FinancialManager" />

	<bean id="financialService"
		class="com.financial.tools.recorderserver.service.FinancialService" />

	<beans profile="cloud">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
	          			  classpath*:/application.local.properties" />
	          			  
	    <cloud:data-source id="dataSource" />
	    
		<jdbc:initialize-database data-source="dataSource"
			ignore-failures="ALL">
			<jdbc:script location="classpath:sql/mysql/schema.sql" />
		</jdbc:initialize-database>
	</beans>

	<beans profile="ct,development">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.test.properties" />

		<jdbc:embedded-database id="dataSource" type="H2">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
		</jdbc:embedded-database>

		<bean class="com.financial.tools.recorderserver.tools.util.DataInitializer"
			lazy-init="false">
			<property name="dataSource" ref="dataSource" />
			<property name="dataFile" value="/data/sample-data.xml" />
		</bean>
	</beans>

</beans>